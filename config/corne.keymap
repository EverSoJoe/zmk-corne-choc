#include "keys_de.h"
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

&led_strip { chain-length = <27>; };

/ {
    behaviors {
        td_shift_caps: td_shift_caps {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_SHIFT_CAPS";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&caps_word>;

            tapping-term-ms = <280>;
        };

        mm_sharp_s: mm_sharp_s {
            compatible = "zmk,behavior-mod-morph";
            label = "MM_SHARP_S";
            bindings = <&kp DE_SHARP_S>, <&kp DE_CAPITAL_SHARP_S>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };

        hml: homerow_mods_left {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_LEFT_HAND";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            hold-trigger-key-positions = <6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 39 40 41 0>;
            quick-tap-ms = <210>;
            flavor = "balanced";
            hold-trigger-on-release;
        };

        hmr: homerow_mods_right {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_RIGHT_HAND";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38>;
            quick-tap-ms = <210>;
            flavor = "balanced";
            hold-trigger-on-release;
        };

        td_mo2_to5: td_mo2_to5 {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_MO2_TO5";
            #binding-cells = <0>;
            bindings = <&mo 2>, <&to 5>;

            tapping-term-ms = <280>;
        };

        td_win_alt: td_win_alt {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_WIN_ALT";
            #binding-cells = <0>;
            bindings = <&kp LGUI>, <&kp LALT>;

            tapping-term-ms = <280>;
        };
    };

    combos {
        compatible = "zmk,combos";

        mo_numpad {
            bindings = <&mo 5>;
            key-positions = <37 38>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            bindings = <
&kp TAB           &kp DE_Q        &kp DE_W            &kp DE_E                &kp DE_R              &kp DE_T     &kp DE_Z   &kp DE_U               &kp DE_I                 &kp DE_O             &kp DE_P               &kp DE_U_UMLAUT
&td_shift_caps    &hml LGUI DE_A  &hml LEFT_ALT DE_S  &hml LEFT_CONTROL DE_D  &hml LEFT_SHIFT DE_F  &kp DE_G     &kp DE_H   &hmr RIGHT_SHIFT DE_J  &hmr RIGHT_CONTROL DE_K  &hmr RIGHT_ALT DE_L  &hmr RGUI DE_O_UMLAUT  &kp DE_A_UMLAUT
&kp LEFT_CONTROL  &kp DE_Y        &kp DE_X            &kp DE_C                &kp DE_V              &kp DE_B     &kp DE_N   &kp DE_M               &kp DE_COMMA             &kp DE_PERIOD        &kp DE_MINUS           &mm_sharp_s
                                                      &td_win_alt             &mo 1                 &kp SPACE    &kp ENTER  &mo 2                  &kp BACKSPACE
            >;

            label = "BASE";
        };

        symbols {
            bindings = <
&kp ESCAPE  &kp DE_EXCL       &kp DE_DOUBLE_QUOTES  &kp DE_DOLLAR  &kp DE_PERCENT       &kp DE_AMPERSAND    &kp DE_SLASH       &kp DE_LEFT_PARENTHESIS  &kp DE_RIGHT_PARENTHESIS  &kp DE_EQUAL        &kp DE_QUESTION   &kp DE_PLUS
&trans      &kp DE_N1         &kp DE_N2             &kp DE_N3      &kp DE_N4            &kp DE_N5           &kp DE_N6          &kp DE_N7                &kp DE_N8                 &kp DE_N9           &kp DE_N0         &kp DE_SINGLE_QUOTE
&trans      &kp DE_LESS_THAN  &kp DE_GREATER_THAN   &kp DE_PIPE    &kp DE_GREATER_THAN  &kp DE_QUESTION     &kp DE_LEFT_BRACE  &kp DE_LEFT_BRACKET      &kp DE_RIGHT_BRACKET      &kp DE_RIGHT_BRACE  &kp DE_BACKSLASH  &kp DE_HASH
                                                    &trans         &trans               &trans              &trans             &trans                   &kp DELETE
            >;

            label = "SYMBOLS";
        };

        move+func {
            bindings = <
&trans  &kp F9  &kp F10  &kp F11  &kp F12  &none     &none     &kp PAGE_UP    &kp HOME  &none      &kp DE_ASTERISK      &kp DE_TILDE
&trans  &kp F5  &kp F6   &kp F7   &kp F8   &none     &kp LEFT  &kp DOWN       &kp UP    &kp RIGHT  &kp DE_SINGLE_QUOTE  &kp DE_GRAVE
&trans  &kp F1  &kp F2   &kp F3   &kp F4   &none     &none     &kp PAGE_DOWN  &kp END   &none      &none                &none
                         &trans   &trans   &trans    &trans    &trans         &kp DEL
            >;

            label = "MOVE+FUNC";
        };

        control {
            bindings = <
&none       &none         &none         &none         &none         &none           &none  &kp C_PREVIOUS        &kp C_PLAY_PAUSE  &kp C_NEXT            &none  &none
&none       &out OUT_TOG  &none         &none         &none         &none           &none  &kp C_VOL_DN          &kp C_MUTE        &kp C_VOL_UP          &none  &none
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &none  &kp C_BRIGHTNESS_DEC  &none             &kp C_BRIGHTNESS_INC  &none  &none
                                        &none         &trans        &none           &to 4  &trans                &none
            >;

            label = "CONTROL";
        };

        gaming {
            bindings = <
&kp ESC   &kp TAB    &kp DE_Q  &kp DE_W  &kp DE_E  &kp DE_R     &none  &none  &none  &none  &none  &none
&kp DE_T  &kp LSHFT  &kp DE_A  &kp DE_S  &kp DE_D  &kp DE_F     &none  &none  &none  &none  &none  &none
&kp DE_G  &kp LCTRL  &kp DE_Z  &kp DE_X  &kp DE_C  &kp DE_V     &none  &none  &none  &none  &none  &none
                               &none     &kp LALT  &kp SPACE    &to 0  &to 6  &none
            >;

            label = "GAME";
        };

        num {
            bindings = <
&trans  &none  &none  &none   &none  &none     &kp KP_NUM       &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp KP_MINUS  &kp C_AL_CALCULATOR
&trans  &none  &none  &none   &none  &none     &kp KP_MULTIPLY  &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp KP_PLUS   &none
&trans  &none  &none  &none   &none  &none     &kp KP_DIVIDE    &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp KP_ENTER  &none
                      &trans  &none  &trans    &kp BSPC         &kp KP_NUMBER_0  &kp KP_DOT
            >;

            label = "NUMBERS";
        };

        game2 {
            bindings = <
&trans  &trans  &trans  &trans   &trans    &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp A   &kp S   &kp D    &kp F     &kp G     &kp H   &kp J   &kp K   &kp L   &trans  &trans
&trans  &trans  &trans  &trans   &trans    &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &kp ESC  &kp LALT  &trans    &trans  &to 0   &trans
            >;

            label = "GAME2";
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        control {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
